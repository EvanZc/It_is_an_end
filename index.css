/*
1、直接给header设置background-image是不行的
2、<header>是个 block元素，没有东西高度为0，而且如果里面放一个span，下面放一个span，
	看得出下面的那个span是换行了的。
3、好像id为header的header，也没有太大的问题。但是慎用，最好区分。
4、加了span以后，就看得到png了。
5、nav也是一个block
6、拉伸有background-size属性，但是现在没有搞。  先记下来
	background-image:url("");  
*/
#div_allcontent {
	width: 1800px;
	margin: 0 auto;
}


span:after {
	content: '';
	display: inline-block;
	height: 180px;  /*为了把这个div扩大到180px高，使得background-image生效*/
	width: 0px;
	margin: 0;
	padding: 0;
}


span {
	position: relative;
	top: -160px;
	right: -1760px;
}

#header {
	background-image: url(/img/index/header_bkg.png);
	background-repeat: no-repeat;
}

nav {
	margin: 10px;
}

/*
aside也是一个块元素

浮动元素：
在 CSS 中，任何元素都可以浮动。浮动元素会生成一个块级框，而不论它本身是何种元素。
如果浮动非替换元素，则要指定一个明确的宽度；否则，它们会尽可能地窄。
假如在一行之上只有极少的空间可供浮动元素，那么这个元素会跳至下一行，(下面如果iframe设置
长一点的话，就会空行到下一行。)
这个过程会持续到某一行拥有足够的空间为止。

iframe就算不指定 长和高，系统也会有个默认的。所以宽度没有占满整个页面，
应该是一个inline-block
iframe天生就有border

todo：iframe应该是可以通过float和各种margin，屏幕大小，算出它自己的宽度
但是估计要js的知识



*/

aside {
	float: left;
	width: 300px;
}

/*
去掉 ul的点
选择器是ul或者li都可以。

默认是有margin和padding的，所以去掉缩进的话，需要把margin，padding去掉
*/
ul {
	list-style-type: none;
	margin: 10px;
	padding: 0;
}

li:hover {
	background-color: yellow;
}

li>a {
	text-decoration: none;
}

div#div_iframe {
	display: inline-block;
	clear: left;
}

/*
a元素的target指向的iframe的name的话，那么这个网址就会在iframe里面显示
a元素指向的页面内容的大小，不会使得iframe被撑开（会有scroll）
*/
div>iframe {
	width: 1190px;
	height: 675px;
	margin: 0;
}

/*
footer 直接用的是 img元素填充， header元素用的是background-image
但是直接加成img图像发现，img其实是在右边突出了一点的

如果把img设置成width 100%，你可以看到图片有缩放。
如果不按比例来，比如widht是100%，height是180px，图片明显看得出有拉伸。

如果设置成180px，可以发现，图片是原图，但是比最外面的div都要大得多。而header
都是被截了。到了div的边缘就不再扩张。因为它是background-img，肯定只会和div相等。
header的div能够扩展到哪，它就只能到哪

footer的img，不会受到div的影响。反而是div受到这个图片的影响。
*/

footer img{
	height: 180px;  
}
